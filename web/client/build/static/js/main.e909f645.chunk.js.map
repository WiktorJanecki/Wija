{"version":3,"sources":["colors.js","routes/index.js","config/link.js","components/LoginForm/LoginForm.js","routes/login.js","ext/jwt-decode.js","components/Panel.js","routes/panel.js","components/character/newCharacter.js","routes/new-character.js","ext/get-params.js","components/character/character.js","routes/character.js","App.js","serviceWorker.js","index.js"],"names":["theme","color","bg","primary","secondary","success","danger","warning","StyledLink","styled","Link","index","style","textAlign","width","className","to","React","Component","LoginForm","props","state","inputLogin","inputPassword","token","player","error","login","bind","fetch","link","method","headers","body","this","then","res","json","data","setState","parseJwt","localStorage","setItem","history","push","e","target","value","base64","split","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse","onChange","setInputLogin","name","placeholder","setInputPassword","type","onClick","StyledContainer","div","parseJWT","StyledCharacterItem","StyledCharacterList","StyledButton","button","StyledNewCharacterButton","Panel","characters","getItem","api","id","status","forceUpdate","clear","window","location","reload","fontSize","fontWeight","display","i","key","nickname","document","querySelector","href","err","logout","gridColumnStart","marginTop","panel","userObject","form","StyledSexContainer","StyledClassContainer","StyledNameInput","input","StyledRadio","StyledClassName","StyledNameContainer","StyledNameSContainer","StyledH1","h1","NewCharacter","addEventListener","preventDefault","stringify","class","sex","decode","newCharacter","getAllUrlParams","url","queryString","search","obj","arr","length","a","paramName","paramValue","toLowerCase","match","exec","StyledReturnButton","char","character","v","getParams","undefined","Object","values","keys","App","exact","path","component","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e909f645.chunk.js","sourcesContent":["const color = {\r\n    bg:'#eee',\r\n\r\n    primary:'#48ea99',\r\n    secondary:'#aaa',\r\n    success:'',\r\n    danger: 'crimson',\r\n    warning:'',\r\n}\r\nexport const theme = {\r\n    color,\r\n};","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLink = styled(Link)`\r\n    font-size: 50px;\r\n    color: black;\r\n    font-weight:bold;\r\n    text-decoration: none;\r\n    &:hover{\r\n        color:grey;\r\n    }\r\n`;\r\n\r\nclass index extends React.Component{\r\n    render(){\r\n        return(\r\n            <>\r\n                <h1 style={{textAlign: 'center'}}>Strona Główna</h1>\r\n                <hr/>\r\n                <div style={{width:'100%',textAlign: 'center'}}>\r\n                <StyledLink className=\"return\" to=\"/login\">LOGIN</StyledLink>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default index;","export default {\r\n    websiteServer:'http://localhost:7000',\r\n    websiteClient:'http://localhost:3000',\r\n    gameServer:'http://localhost:50505',\r\n    gameClient:'',\r\n};","import React,{Component} from 'react';\r\nimport './LoginForm.scss';\r\nimport link from '../../config/link';\r\nclass LoginForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            inputLogin:'',\r\n            inputPassword:'',\r\n            token:'',\r\n            player:{\r\n                error:\"\"\r\n            },\r\n        }   \r\n        this.login = this.login.bind(this);     \r\n    }\r\n    login(state){  \r\n        fetch(link.websiteServer+'/login',{\r\n            method: \"POST\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n              },\r\n            body:'{\"login\":\"'+this.state.inputLogin+'\",\"password\":\"'+this.state.inputPassword+'\"}'\r\n        })\r\n        .then(res => res.json())\r\n        .then(data=>this.setState({token:data}))\r\n        .then(()=>this.parseJwt(this.state.token))\r\n        .then(data => this.setState({player: data}))\r\n        .then(()=> localStorage.setItem('token',this.state.token))\r\n        .then(()=>{if(this.state.player.success){this.props.history.push('/panel')}});\r\n        \r\n        \r\n\r\n        //IF state.player.success == tru itp\r\n    }\r\n    setInputPassword(e){\r\n        this.setState({inputPassword: e.target.value});\r\n    }\r\n    setInputLogin(e){\r\n        this.setState({inputLogin: e.target.value});\r\n    }\r\n    parseJwt (token) {\r\n        var base64Url = token.split('.')[1];\r\n        var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n        var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\r\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n        }).join(''));\r\n    \r\n        return JSON.parse(jsonPayload);\r\n    };\r\n    \r\n    render(){\r\n        let error;\r\n        if(this.state.player.error === \"\"){error = \"\"}\r\n        if(this.state.player.error === \"Bad password\"){error = \"Złe hasło!\"}\r\n        if(this.state.player.error === \"Bad login\"){error = \"Złe hasło!\"}\r\n        if(this.state.player.error === \"Login is null\"){error = \"Proszę wypełnić wszystkie pola!\"}\r\n        if(this.state.player.error === \"db error\"){error = 'Błąd bazy danych! Skontaktuj się z administratorem'}\r\n        return(\r\n            <>\r\n                <article>\r\n                    <div className=\"container\">\r\n                        <div className=\"grid-container\">\r\n                            <h2>Logowanie</h2>\r\n                            <form>\r\n                                <input onChange={(e) => this.setInputLogin(e)} name=\"login\" placeholder=\"Nazwa użytkownika\" className=\"text\"></input>\r\n                                <input onChange={(e) => this.setInputPassword(e)} name=\"password\" value={this.state.inputPassword} type=\"password\" placeholder=\"Hasło\" className=\"text\"></input>\r\n                                <button onClick={() => this.login()} type=\"button\" className=\"submit\">Zaloguj</button>\r\n                                \r\n                            </form>\r\n                            <span className=\"error\" style={{color: \"red\"}}>{error}</span>\r\n                        </div>\r\n                    </div>\r\n                </article>\r\n            </>\r\n        );\r\n    }\r\n};\r\nexport default LoginForm;","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport LoginForm from '../components/LoginForm/LoginForm'\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLink = styled(Link)`\r\n    font-size:30px;\r\n    text-decoration:none;\r\n    color:black;\r\n    font-weight:bold;\r\n    position:absolute;\r\n    bottom:20px;\r\n    &:hover{\r\n        color:grey;\r\n    }\r\n\r\n`;\r\nconst StyledContainer = styled.div`\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:center;\r\n`;\r\n\r\nclass login extends React.Component{\r\n    render(){\r\n        return(\r\n            <StyledContainer>\r\n                <LoginForm history={this.props.history} />\r\n                <StyledLink className=\"return\" to=\"/\">WRÓĆ</StyledLink>\r\n            </StyledContainer>\r\n        );\r\n    }\r\n}\r\nexport default login;","function parseJWT(token){\r\n    if(token === null){return '';}else{\r\n    var base64Url = token.split('.')[1];\r\n        var base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\r\n        var jsonPayload = decodeURIComponent(atob(base64).split('').map(function(c) {\r\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n        }).join(''));\r\n    \r\n        return JSON.parse(jsonPayload);\r\n    }\r\n}\r\nexport default parseJWT;","import React, {Component} from 'react';\r\nimport parse from '../ext/jwt-decode';\r\nimport styled from 'styled-components';\r\nimport link from '../config/link';\r\n\r\nconst StyledCharacterItem = styled.div`\r\n    grid-column-start: 2;\r\n    margin-bottom: 20px;\r\n    border-bottom: 1px solid black;\r\n    padding: 15px;\r\n    display:flex;\r\n    input{\r\n        margin-right:15px;\r\n        appearance: none;\r\n        border: 1px solid black;\r\n        border-radius: 500px;\r\n        outline: none;\r\n        transition: border-width 0.2s ease-in-out;\r\n        width:20px;\r\n        height:20px;\r\n        &:checked{\r\n            border: 5px solid black; \r\n        }\r\n        &:hover{\r\n            border: 3px solid black; \r\n            &:checked{\r\n                border: 5px solid black; \r\n            }\r\n        }\r\n    }\r\n`;\r\nconst StyledCharacterList = styled.div`\r\n   display:grid;\r\n   text-align:center;\r\n   grid-template-columns:1fr minmax(200px,1fr) 1fr;\r\n`;\r\nconst StyledButton = styled.button`\r\n    grid-column: 2/3;\r\n    outline:none;\r\n    border:none;\r\n    border-radius: 50px;\r\n    padding:15px;\r\n    color:white;\r\n    font-size:20px;\r\n    margin-top:20px;\r\n    background-color: ${({theme}) => theme.color.secondary};\r\n    &:nth-of-type(2) {\r\n        margin-top:100px;\r\n        background-color:  ${({ theme }) => theme.color.primary};}\r\n    &:last-of-type {background-color:  ${({ theme }) => theme.color.danger};}\r\n`;\r\nconst StyledNewCharacterButton = styled.button`\r\n    grid-column: 2/3;\r\n    padding:15px;\r\n    border-radius:50px;\r\n    background-color: ${({theme}) => theme.color.secondary};\r\n    border:none;\r\n    outline:none;\r\n    font-size:20px;\r\n    color:white;\r\n    position:relative;\r\n    margin-bottom:20px;\r\n`;\r\n\r\nclass Panel extends Component{\r\n    state={\r\n        characters:''\r\n    }\r\n    componentDidMount(){\r\n        if(localStorage.getItem('token') === null){\r\n            this.props.history.push('/login');\r\n        }\r\n        const api=link.websiteServer+\"/character/\"+parse(localStorage.getItem('token')).id;\r\n        fetch(api,{\r\n            method: \"GET\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer '+localStorage.getItem('token'),\r\n              },\r\n        })\r\n        .then((res)=>{\r\n            if(res.status===403){\r\n                this.props.history.push('/login');\r\n            }else{\r\n                return res.json();\r\n            }\r\n        })\r\n        .then(data => this.setState({characters: data}))\r\n        .then(()=> this.forceUpdate());\r\n    }\r\n    logout(){\r\n        localStorage.clear();\r\n        window.location.reload();\r\n    }\r\n    render(){\r\n        const name = parse(localStorage.getItem('token')).login;\r\n        if(typeof this.state.characters == 'object'){\r\n            return (\r\n                <>\r\n                    <h2>Witaj {name}!</h2>\r\n                    <StyledCharacterList>\r\n                            {\r\n                                this.state.characters.error ? (<StyledCharacterItem style={{textAlign: 'center',fontSize: '20px', fontWeight: 'bold',display:'block'}}>BRAK POSTACI</StyledCharacterItem>) : (\r\n                                this.state.characters.map((e,i)=> (\r\n                                    <StyledCharacterItem key={i}><input type=\"radio\" name=\"char\" id=\"\" value={e.id}/>{e.nickname}</StyledCharacterItem>\r\n                                )))\r\n                            }\r\n                        <br />\r\n                        <StyledNewCharacterButton onClick={() => this.props.history.push(\"new-character\")}>Nowa postać</StyledNewCharacterButton>\r\n                        <br />\r\n                        <StyledButton onClick={()=>{window.location=\"gra\";}}>Graj</StyledButton>\r\n                        <StyledButton onClick={()=> {if(!document.querySelector('input[name=char]:checked')){this.setState({err : 'Wybierz postać!'});\r\n                        }else{window.location.href = '/character?id='+document.querySelector(\"input[name=char]:checked\").value}}}>Zobacz</StyledButton>\r\n                        <StyledButton onClick={()=>this.logout()}>Wyloguj</StyledButton>\r\n                        <span style={{color: 'red',gridColumnStart: '2',marginTop: '20px'}}>{this.state.err}</span>\r\n                    </StyledCharacterList>\r\n                </>\r\n            );\r\n        }\r\n        else{return <></>;}\r\n    }\r\n}\r\nexport default Panel;","import React from 'react'\r\nimport Panel from '../components/Panel';\r\n\r\nclass panel extends React.Component{\r\n    render(){\r\n        return(\r\n            <>\r\n                <Panel history={this.props.history} userObject={{success: false}}/>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default panel;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport decode from '../../ext/jwt-decode';\r\nimport link from '../../config/link';\r\n\r\nconst StyledContainer = styled.form`\r\n    display:grid;\r\n    grid-template-columns:1fr minmax(200px,1fr) 1fr;\r\n`;\r\nconst StyledSexContainer = styled.div`\r\n    grid-column: 2/3;\r\n    border-bottom: 1px solid black;\r\n    padding:15px;\r\n    display:grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-template-rows: auto auto auto;\r\n`;\r\nconst StyledClassContainer = styled.div`\r\n    grid-column: 2/3;\r\n    border-bottom: 1px solid black;\r\n    padding:15px;\r\n    display:grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-template-rows: auto auto auto;\r\n`;\r\nconst StyledNameInput = styled.input`\r\n    grid-column: 2/3;\r\n    padding:15px;\r\n    font-size:20px;\r\n    outline:none;\r\n    background-color: ${({theme})=> theme.color.bg};\r\n    text-align:center;\r\n    border:none;\r\n    border-bottom:1px solid black;\r\n    `;\r\nconst StyledRadio = styled.input`\r\n    display: inline-block;\r\n    appearance: none;\r\n    border-radius:50px;\r\n    border: 1px solid black;\r\n    width:20px;\r\n    margin-right:15px;\r\n    height:20px;\r\n    outline:none;\r\n    transition: border-width 0.2s ease-in-out;\r\n    &:checked{\r\n        border:5px solid black;\r\n    }\r\n    &:hover{\r\n        border:3px solid black;\r\n        &:checked{\r\n            border:5px solid black;\r\n        }\r\n    }\r\n`;\r\nconst StyledButton = styled.button`\r\n    grid-column: 2/3;\r\n    font-size:20px;\r\n    border:none;\r\n    background-color: ${({theme})=>theme.color.danger};\r\n    border-radius:50px;\r\n    padding:15px;\r\n    color:white;\r\n    margin-top:20px;\r\n    &:first-of-type{\r\n        background-color:${({theme})=>theme.color.primary};\r\n    }\r\n`;\r\nconst StyledClassName = styled.div`\r\n    display:inline-block;\r\n    position:absolute;\r\n    top: 2px;\r\n`;\r\nconst StyledNameContainer = styled.div`\r\n    grid-column: 2/3;\r\n    position:relative;\r\n    &:nth-child(-n+3){\r\n        grid-column: 1/2;\r\n        &:nth-child(1){grid-row: 1/2;}\r\n        &:nth-child(2){grid-row: 2/3;}\r\n        &:nth-child(3){grid-row: 3/4;}\r\n    }\r\n`;\r\nconst StyledNameSContainer = styled.div`\r\n    grid-column: 1/2;\r\n    position:relative;\r\n    &:last-child{\r\n        grid-column: 2/3;\r\n    }\r\n`;\r\nconst StyledH1 = styled.h1`\r\n    text-align:center;\r\n`;\r\nclass NewCharacter extends React.Component{\r\n    state={\r\n        error:\"\",\r\n    }\r\n    componentDidMount(){\r\n        if(localStorage.getItem('token') === null){\r\n            this.props.history.push('/login');\r\n        }\r\n        const form = document.querySelector('.form');\r\n        form.addEventListener('submit', (e) =>{\r\n            e.preventDefault();\r\n            fetch(link.websiteServer+\"/character\",{\r\n                method: 'post',    \r\n                body: JSON.stringify({\r\n                    name:document.querySelector('.name').value,\r\n                    class:document.querySelector('input[name=class]:checked') !== null ? document.querySelector('input[name=class]:checked').value : \"\",\r\n                    sex:document.querySelector('input[name=sex]:checked') !== null ? document.querySelector('input[name=sex]:checked').value : '',\r\n                }), //works\r\n                headers: {\r\n                    'Accept': 'application/json',\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer '+localStorage.getItem('token'),\r\n                  },\r\n            })\r\n            .then((res)=>{\r\n                if(res.status===403){\r\n                    this.props.history.push('/login');\r\n                }else{\r\n                    return res.json();\r\n                }\r\n            })\r\n            .then(data => decode(data))\r\n            .then(data => this.setState({error: data.error,success:data.success}))\r\n            .then(()=>this.forceUpdate())\r\n            .then(()=>{if(this.state.success){this.props.history.push('/panel')}});\r\n        });\r\n    }\r\n    render(){\r\n        let error = \"\";\r\n        if(this.state.error==\"\"){error=\"\";}\r\n        else if(this.state.error==\"Some fields are empty\"){error=\"Wypełnij wszystkie pola\";}\r\n        else if(this.state.error==\"This character already exist\"){error=\"Postać o takiej nazwie już istnieje :/\";}\r\n        else if(this.state.error==\"Form values are invalid\"){error=\"Ktoś zhackował htmela :D\";}\r\n        return(\r\n            <>\r\n                <StyledH1>Tworzenie postaci:</StyledH1>\r\n                <StyledContainer className=\"form\">\r\n                    <StyledNameInput className=\"name\" name=\"name\" placeholder=\"Wpisz nazwę postaci\" />\r\n                    <StyledClassContainer>\r\n                        <StyledNameContainer><StyledRadio type=\"radio\" className='class'  name=\"class\" value=\"1\"/><StyledClassName>Klasa1</StyledClassName></StyledNameContainer>\r\n                        <StyledNameContainer><StyledRadio type=\"radio\" className='class' name=\"class\" value=\"2\"/><StyledClassName>Klasa2</StyledClassName></StyledNameContainer>\r\n                        <StyledNameContainer><StyledRadio type=\"radio\" className='class' name=\"class\" value=\"3\"/><StyledClassName>Klasa3</StyledClassName></StyledNameContainer>\r\n                        <StyledNameContainer><StyledRadio type=\"radio\" className='class' name=\"class\" value=\"4\"/><StyledClassName>Klasa4</StyledClassName></StyledNameContainer>\r\n                        <StyledNameContainer><StyledRadio type=\"radio\" className='class' name=\"class\" value=\"5\"/><StyledClassName>Klasa5</StyledClassName></StyledNameContainer>\r\n                        <StyledNameContainer><StyledRadio type=\"radio\" className='class' name=\"class\" value=\"6\"/><StyledClassName>Klasa6</StyledClassName></StyledNameContainer>\r\n                    </StyledClassContainer>\r\n                    <StyledSexContainer>\r\n                    <StyledNameSContainer><StyledRadio type=\"radio\" className='sex' name=\"sex\" value=\"m\"/><StyledClassName>Mężczyzna</StyledClassName></StyledNameSContainer>\r\n                    <StyledNameSContainer><StyledRadio type=\"radio\" className='sex' name=\"sex\" value=\"f\"/><StyledClassName>Kobieta</StyledClassName></StyledNameSContainer>\r\n                    </StyledSexContainer>\r\n                    <StyledButton className=\"submit\" type=\"submit\">Stwórz</StyledButton>\r\n                    <StyledButton onClick={()=>{this.props.history.push('/panel')}}>Wróć</StyledButton>\r\n                    <span style={{color: 'red',textAlign: 'center',gridColumnStart: '2',marginTop: '20px'}}>{error}</span>\r\n                </StyledContainer>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default NewCharacter;","import React from 'react';\r\n\r\nimport NewCharacter from '../components/character/newCharacter';\r\n\r\nclass newCharacter extends React.Component{\r\n    render(){\r\n        return(\r\n            <>\r\n                <NewCharacter history={this.props.history}/>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default newCharacter;","function getAllUrlParams(url) {\r\n\r\n    // get query string from url (optional) or window\r\n    var queryString = url ? url.split('?')[1] : window.location.search.slice(1);\r\n  \r\n    // we'll store the parameters here\r\n    var obj = {};\r\n  \r\n    // if query string exists\r\n    if (queryString) {\r\n  \r\n      // stuff after # is not part of query string, so get rid of it\r\n      queryString = queryString.split('#')[0];\r\n  \r\n      // split our query string into its component parts\r\n      var arr = queryString.split('&');\r\n  \r\n      for (var i = 0; i < arr.length; i++) {\r\n        // separate the keys and the values\r\n        var a = arr[i].split('=');\r\n  \r\n        // set parameter name and value (use 'true' if empty)\r\n        var paramName = a[0];\r\n        var paramValue = typeof (a[1]) === 'undefined' ? true : a[1];\r\n  \r\n        // (optional) keep case consistent\r\n        paramName = paramName.toLowerCase();\r\n        if (typeof paramValue === 'string') paramValue = paramValue.toLowerCase();\r\n  \r\n        // if the paramName ends with square brackets, e.g. colors[] or colors[2]\r\n        if (paramName.match(/\\[(\\d+)?\\]$/)) {\r\n  \r\n          // create key if it doesn't exist\r\n          var key = paramName.replace(/\\[(\\d+)?\\]/, '');\r\n          if (!obj[key]) obj[key] = [];\r\n  \r\n          // if it's an indexed array e.g. colors[2]\r\n          if (paramName.match(/\\[\\d+\\]$/)) {\r\n            // get the index value and add the entry at the appropriate position\r\n            var index = /\\[(\\d+)\\]/.exec(paramName)[1];\r\n            obj[key][index] = paramValue;\r\n          } else {\r\n            // otherwise add the value to the end of the array\r\n            obj[key].push(paramValue);\r\n          }\r\n        } else {\r\n          // we're dealing with a string\r\n          if (!obj[paramName]) {\r\n            // if it doesn't exist, create property\r\n            obj[paramName] = paramValue;\r\n          } else if (obj[paramName] && typeof obj[paramName] === 'string'){\r\n            // if property does exist and it's a string, convert it to an array\r\n            obj[paramName] = [obj[paramName]];\r\n            obj[paramName].push(paramValue);\r\n          } else {\r\n            // otherwise add the property\r\n            obj[paramName].push(paramValue);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  \r\n    return obj;\r\n  }\r\n  export default getAllUrlParams;","import React from 'react';\r\nimport getParams from '../../ext/get-params'\r\nimport parse from '../../ext/jwt-decode'\r\nimport styled from 'styled-components';\r\nimport {Link} from 'react-router-dom';\r\nimport link from '../../config/link';\r\n\r\nconst StyledReturnButton = styled(Link)`\r\n    font-size:20px;\r\n    padding:15px;\r\n    grid-column: 2/3;\r\n    background-color: crimson;\r\n    color:white;\r\n    text-decoration:none;\r\n    border-radius:50px;  \r\n    text-align:center;\r\n`;\r\nconst StyledContainer = styled.div`\r\n    display:grid;\r\n    grid-template-columns:1fr minmax(200px, 1fr) 1fr;\r\n    /* text-align:center; */\r\n`;\r\n\r\nconst StyledCharacterItem = styled.div`\r\n    grid-column: 2/3;\r\n    padding:15px;\r\n    border-bottom: 1px solid black;\r\n    &:last-of-type{\r\n        margin-bottom:30px;\r\n    }\r\n`;\r\n\r\n\r\nlet char = [];\r\n\r\nclass character extends React.Component{\r\n    componentDidMount(){\r\n        if(localStorage.getItem('token') === null){\r\n            this.props.history.push('/login');\r\n        }\r\n        const api=link.websiteServer+\"/character/\"+parse(localStorage.getItem('token')).id;\r\n        fetch(api,{\r\n            method: \"GET\",\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer '+localStorage.getItem('token'),\r\n              },\r\n        })\r\n        .then((res)=>{\r\n            if(res.status===403){\r\n                this.props.history.push('/login');\r\n            }else{\r\n                return res.json();\r\n            }\r\n        })\r\n        .then(data => char=data)\r\n        .then(()=>{})\r\n        .then(()=> this.forceUpdate());\r\n    }\r\n    \r\n    render(){\r\n        let character = [];\r\n        if(char.error == \"Bad Id\"){character[0]=\"Postać nie istnieje\";}\r\n        else{\r\n            char.map((v)=>{\r\n                if(v.id == getParams().id)\r\n                {\r\n                    character = v;\r\n                   \r\n                }\r\n            });\r\n            if(character.length !== undefined){\r\n                character[0] = 'Postać nie istnieje';\r\n            }\r\n        }   \r\n        \r\n        return(\r\n            <StyledContainer>\r\n            {\r\n                Object.values(character).map((e,i)=>{\r\n                return <StyledCharacterItem  key={i}>{Object.keys(character)[i]} : {e}</StyledCharacterItem>;\r\n                })\r\n            }\r\n            <StyledReturnButton to=\"/panel\">Wróć</StyledReturnButton>\r\n            </StyledContainer>\r\n        );\r\n    }\r\n}\r\nexport default character;","import React from 'react';\r\n\r\nimport Character from '../components/character/character'\r\n\r\nclass character extends React.Component{\r\n    render(){\r\n        return(\r\n            <>\r\n                <Character history={this.props.history}/>\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default character;","import React,{Component} from 'react'\nimport {ThemeProvider} from 'styled-components'\nimport {theme} from './colors';\nimport {BrowserRouter as Router,Route} from 'react-router-dom'\nimport index from './routes/index'\nimport login from './routes/login'\nimport panel from './routes/panel'\nimport newCharacter from './routes/new-character'\nimport character from './routes/character'\nimport './App.css';\n\nclass App extends Component {\n\trender(){\n\t\treturn(\n\t\t\t<ThemeProvider theme={theme}>\n\t\t\t\t<Router>\n\t\t\t\t\t<Route exact path=\"/\" component={index} />\n\t\t\t\t\t<Route exact path=\"/login\" component={login} />\n\t\t\t\t\t<Route exact path=\"/panel\" component={panel} />\n\t\t\t\t\t<Route exact path=\"/character\" component={character} />\n\t\t\t\t\t<Route exact path=\"/new-character\" component={newCharacter} />\n\t\t\t\t</Router>\n\t\t\t</ThemeProvider>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}